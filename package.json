{
  "name": "entrance-test-second-year-xxin",
  "version": "1.0.0",
  "description": "[![Review Assignment Due Date](https://classroom.github.com/assets/deadline-readme-button-22041afd0340ce965d47ae6ef1cefeee28c7c493a6346c4f15d667ab976d596c.svg)](https://classroom.github.com/a/bD90eOAJ) # Входная работа для определения того, что вы помните (или не помните) после каникул ## Общее описание работы 1. Работа может выполняться как в команде (2-5 человек), так и индивидуально.     - Перед началом выполнения работы в README укажите состав команды или просто ваше имя. 2. Работа состоит из 2 заданий, каждое из которых имеет свои критерии оценки. 3. В оценке работы учитывается качество кода (выделение абстракций, функциональный подход, линтинг). 4. В оценке работы учитывается архитектура проекта и структура репозитория. 5. Интегрировать в работу верстку или нет - остается на ваш выбор. 6. Чем можно пользоваться? Чем угодно, кроме нейронок. 7. Плакать разрешается. ## Легенда Тайлер Дерден и Патрик Бэйтмен объездили всю страну. Потрясающий сервис туристических городов оставил после себя неизгладимое впечатление, абонемент к психологу и пару седых волос. Накопив некоторую сумму денег, новоиспечённые коллеги Тайлер и Патрик решили открыть свою сеть отелей, чтобы поднять с колен туристический сервис страны.   Таким образом, у них возникла потребность в создании эффективной системы управления отелями с правильно выстроенными бизнес-процессами, что позволит развивать свой бизнес и богатеть. ## Техническое задание ### Задание 1 1. Разработать структуру хранения информации об отелях.     - **Название отеля** — строка до 150 символов, хранит наименование отеля.     - **Регион** — ссылка на элемент другого файла, где хранится список всех регионов. 2. Разработать структуру номерного фонда каждого отеля.     -  Разработать структуру хранения информации о номерном фонде отеля (структура хранения подчинена справочнику «Отели»).     -  Основные характеристики номера:         - **Номер** — строка до 10 символов.         - **Категория** — одно из допустимых значений: Стандарт, Люкс, Апартаменты.         - **Количество мест** - определяется автоматически исходя из категории номера: Стандарт и Люкс до 2х мест, Апартаменты до 4х мест.         - **Статус** - одно из допустимых значений: свободен, занят. Значение по умолчанию - свободен. 3. Реализовать функцию изменения статуса номера.       Функция меняет статус номера на противоположный. 4. Реализовать функцию просмотра фонда свободных номеров.       Функция генерирует список номеров, отвечающих на вопрос: «Какие номера свободны на определенный промежуток дат?». 5. Тестирование.       Написать автоматический тест, проверяющий корректность функций изменения статуса и просмотра фонда.       Заполните минимальный набор данных:     - 2 отеля в различных регионах.     - В каждом отеле заполнить структуру номерного фонда — не менее 10 номеров. ### Задание 2 1. Создать структуру хранения информации о постояльцах отеля.     - **ФИО постояльца** - строка до 150 символов.     - **Контактный телефон** - строка до 12 символов. 2. Создать структуру храниения информации о плательщике.       В номера могут заселяться до 4-х человек, при этом плательщик может быть один — либо физическое лицо, либо юридическое лицо.     - **Плательщик** - строка до 150 символов.     - **Вид плательщика** - одно из допустимых значений: физическое лицо, юридическое лицо. 3. Реализовать функцию бронирования номера.       Функция создает запись о бронировании (учтите, что событие бронирования меняет статус номера).     - **Дата заказа** - тип данных Date().     - **Заказчик** - ссылка на элемент из файла о клиентах.     - **Постояльцы** - массив ссылок на элементы из файла о постояльцах.     - **Отель** - ссылка на элемент из файла о клиентах.     - **Бронируемый номер** - доступны для выбора только номера со статусом \"свободен\".     - **Дата заезда** - тип данных Date().     - **Дата выезда** - тип данных Date(). 4. Тестирование.       Написать автоматический тест, проверяющий корректность функций бронирования.       Заполните минимальный набор данных:       - Минимум 2 записи о бронировании. ## Критерии оценки: <table>     <tr>         <th>Критерий</th>         <th>Балл</th>         <th>Прибавка</th>         <th>Итоговый балл</th>     </tr>     <tr>     \t<td>Реализована структура \"Отели\"</td>     \t<td>1</td>     \t<td>Реализована функция добавления, удаления и изменения данных об отеле (+3)</td>     \t<td>4</td>     </tr>     <tr>     \t<td>Реализована структура \"Регионы\"</td>     \t<td>1</td>     \t<td></td>     \t<td>1</td>     </tr>     <tr>     \t<td>Протестировано ограничение на длину в названия отеля</td>     \t<td>1</td>     \t<td></td>     \t<td>1</td>     </tr>     <tr>     \t<td>Протестировано ограничение на длину в названии номера</td>     \t<td>1</td>     \t<td></td>     \t<td>1</td>     </tr>     <tr>     \t<td>Протестирование ограничение допустимых значений категории номера</td>     \t<td>1</td>     \t<td></td>     \t<td>1</td>     </tr>     <tr>     \t<td>Протестирована автоматическое установление количества мест в номере</td>     \t<td>1</td>     \t<td></td>     \t<td>1</td>     </tr>     <tr>     \t<td>Протестировано изменение статуса номера</td>     \t<td>1</td>     \t<td></td>     \t<td>1</td>     </tr>     <tr>     \t<td>Протестирована корректность вывода списка свободных номеров</td>     \t<td>3</td>     \t<td>Функция проводит агрегацию данных и выводит сводный список количества свободных номеров в каждой категории (+2)</td>     \t<td>5</td>     </tr>     <tr>     \t<td>Реализована структура \"Постояльцы\"</td>     \t<td>1</td>     \t<td>Реализована функция удаления и изменения данных о постояльце (+1). Структура автоматически пополняется при поступлении нового бронирования (+3)</td>     \t<td>5</td>     </tr>     <tr>     \t<td>Протестировано ограничение на длину в ФИО постояльца</td>     \t<td>1</td>     \t<td></td>     \t<td>1</td>     </tr>     <tr>     \t<td>Для номера телефона реализован шаблон \"+7ххх-ххх-хх-хх\"</td>     \t<td>2</td>     \t<td>Протестировано форматирование введенного телефона под шаблон (+2). Протестировано ограничение на длину номера телефона (+1)</td>     \t<td>5</td>     </tr>     <tr>     \t<td>Реализована и протестирована механика идентификации полных тезок среди постояльцев</td>     \t<td>5</td>     \t<td></td>     \t<td>5</td>     </tr>     <tr>     \t<td>Реализована структура \"Плательщики\"</td>     \t<td>1</td>     \t<td>Реализована функция удаления и изменения данных о плательщике (+1). Структура автоматически пополняется при поступлении нового бронирования (+3)</td>     \t<td>5</td>     </tr>     <tr>     \t<td>Протестировано ограничение на длину в наименовании плательщика</td>     \t<td>1</td>     \t<td></td>     \t<td>1</td>     </tr>     <tr>     \t<td>Протестирование ограничение допустимых значений вида плательщика</td>     \t<td>1</td>     \t<td></td>     \t<td>1</td>     </tr>     <tr>     \t<td>Протестирована функция создания бронирования</td>     \t<td>5</td>     \t<td>Функция автоматически меняет статус номера (+2). Функция осуществляет проверку допустимости значений дат заезда и выезда (+3)</td>     \t<td>10</td>     </tr>     <tr>     \t<td>Протестирован негативный сценарий проверки бронирования отеля со статусом \"занят\"</td>     \t<td>3</td>     \t<td>Функция выводит список свободных номеров в качестве альтернативы бронирования (+4)</td>     \t<td>7</td>     </tr>     <tr>         <td colspan=\"3\" align=\"right\">Итого</td>     \t<td>55</td>     </tr> </table>",
  "main": "task1.js",
  "type": "module",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@eslint/create-config": "^1.0.0",
    "@eslint/eslintrc": "^3.1.0",
    "@eslint/js": "^9.10.0",
    "@types/readline-sync": "^1.4.8",
    "eslint": "^8.57.0",
    "eslint-config-airbnb": "^19.0.4",
    "eslint-plugin-import": "^2.30.0",
    "eslint-plugin-jsx-a11y": "^6.10.0",
    "eslint-plugin-react": "^7.35.2",
    "eslint-plugin-react-hooks": "^4.6.2",
    "eslint-plugin-vue": "^9.28.0",
    "globals": "^15.9.0"
  },
  "dependencies": {
    "acorn": "^8.12.1",
    "acorn-jsx": "^5.3.2",
    "ajv": "^6.12.6",
    "ansi-colors": "^4.1.3",
    "ansi-regex": "^5.0.1",
    "ansi-styles": "^4.3.0",
    "argparse": "^2.0.1",
    "aria-query": "^5.1.3",
    "array-buffer-byte-length": "^1.0.1",
    "array-includes": "^3.1.8",
    "array.prototype.findlast": "^1.2.5",
    "array.prototype.findlastindex": "^1.2.5",
    "array.prototype.flat": "^1.3.2",
    "array.prototype.flatmap": "^1.3.2",
    "array.prototype.tosorted": "^1.1.4",
    "arraybuffer.prototype.slice": "^1.0.3",
    "ast-types-flow": "^0.0.8",
    "available-typed-arrays": "^1.0.7",
    "axe-core": "^4.10.0",
    "axobject-query": "^4.1.0",
    "balanced-match": "^1.0.2",
    "boolbase": "^1.0.0",
    "brace-expansion": "^1.1.11",
    "call-bind": "^1.0.7",
    "callsites": "^3.1.0",
    "chalk": "^4.1.2",
    "color-convert": "^2.0.1",
    "color-name": "^1.1.4",
    "concat-map": "^0.0.1",
    "confusing-browser-globals": "^1.0.11",
    "cross-spawn": "^7.0.3",
    "cssesc": "^3.0.0",
    "damerau-levenshtein": "^1.0.8",
    "data-view-buffer": "^1.0.1",
    "data-view-byte-length": "^1.0.1",
    "data-view-byte-offset": "^1.0.0",
    "debug": "^4.3.7",
    "deep-equal": "^2.2.3",
    "deep-is": "^0.1.4",
    "define-data-property": "^1.1.4",
    "define-properties": "^1.2.1",
    "doctrine": "^3.0.0",
    "emoji-regex": "^9.2.2",
    "enquirer": "^2.4.1",
    "es-abstract": "^1.23.3",
    "es-define-property": "^1.0.0",
    "es-errors": "^1.3.0",
    "es-get-iterator": "^1.1.3",
    "es-iterator-helpers": "^1.0.19",
    "es-object-atoms": "^1.0.0",
    "es-set-tostringtag": "^2.0.3",
    "es-shim-unscopables": "^1.0.2",
    "es-to-primitive": "^1.2.1",
    "escape-string-regexp": "^4.0.0",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-import-resolver-node": "^0.3.9",
    "eslint-module-utils": "^2.11.0",
    "eslint-scope": "^7.2.2",
    "eslint-visitor-keys": "^3.4.3",
    "espree": "^9.6.1",
    "esquery": "^1.6.0",
    "esrecurse": "^4.3.0",
    "estraverse": "^5.3.0",
    "esutils": "^2.0.3",
    "fast-deep-equal": "^3.1.3",
    "fast-json-stable-stringify": "^2.1.0",
    "fast-levenshtein": "^2.0.6",
    "fastq": "^1.17.1",
    "file-entry-cache": "^6.0.1",
    "find-up": "^5.0.0",
    "flat-cache": "^3.2.0",
    "flatted": "^3.3.1",
    "for-each": "^0.3.3",
    "fs": "^0.0.1-security",
    "fs.realpath": "^1.0.0",
    "function-bind": "^1.1.2",
    "function.prototype.name": "^1.1.6",
    "functions-have-names": "^1.2.3",
    "get-intrinsic": "^1.2.4",
    "get-symbol-description": "^1.0.2",
    "glob": "^7.2.3",
    "glob-parent": "^6.0.2",
    "globalthis": "^1.0.4",
    "gopd": "^1.0.1",
    "graphemer": "^1.4.0",
    "has-bigints": "^1.0.2",
    "has-flag": "^4.0.0",
    "has-property-descriptors": "^1.0.2",
    "has-proto": "^1.0.3",
    "has-symbols": "^1.0.3",
    "has-tostringtag": "^1.0.2",
    "hasown": "^2.0.2",
    "ignore": "^5.3.2",
    "import-fresh": "^3.3.0",
    "imurmurhash": "^0.1.4",
    "inflight": "^1.0.6",
    "inherits": "^2.0.4",
    "internal-slot": "^1.0.7",
    "is-arguments": "^1.1.1",
    "is-array-buffer": "^3.0.4",
    "is-async-function": "^2.0.0",
    "is-bigint": "^1.0.4",
    "is-boolean-object": "^1.1.2",
    "is-callable": "^1.2.7",
    "is-core-module": "^2.15.1",
    "is-data-view": "^1.0.1",
    "is-date-object": "^1.0.5",
    "is-extglob": "^2.1.1",
    "is-finalizationregistry": "^1.0.2",
    "is-generator-function": "^1.0.10",
    "is-glob": "^4.0.3",
    "is-map": "^2.0.3",
    "is-negative-zero": "^2.0.3",
    "is-number-object": "^1.0.7",
    "is-path-inside": "^3.0.3",
    "is-regex": "^1.1.4",
    "is-set": "^2.0.3",
    "is-shared-array-buffer": "^1.0.3",
    "is-string": "^1.0.7",
    "is-symbol": "^1.0.4",
    "is-typed-array": "^1.1.13",
    "is-weakmap": "^2.0.2",
    "is-weakref": "^1.0.2",
    "is-weakset": "^2.0.3",
    "isarray": "^2.0.5",
    "isexe": "^2.0.0",
    "iterator.prototype": "^1.1.2",
    "js-tokens": "^4.0.0",
    "js-yaml": "^4.1.0",
    "json-buffer": "^3.0.1",
    "json-schema-traverse": "^0.4.1",
    "json-stable-stringify-without-jsonify": "^1.0.1",
    "json5": "^1.0.2",
    "jsx-ast-utils": "^3.3.5",
    "keyv": "^4.5.4",
    "language-subtag-registry": "^0.3.23",
    "language-tags": "^1.0.9",
    "levn": "^0.4.1",
    "locate-path": "^6.0.0",
    "lodash": "^4.17.21",
    "lodash.merge": "^4.6.2",
    "loose-envify": "^1.4.0",
    "minimatch": "^3.1.2",
    "minimist": "^1.2.8",
    "ms": "^2.1.3",
    "natural-compare": "^1.4.0",
    "nth-check": "^2.1.1",
    "object-assign": "^4.1.1",
    "object-inspect": "^1.13.2",
    "object-is": "^1.1.6",
    "object-keys": "^1.1.1",
    "object.assign": "^4.1.5",
    "object.entries": "^1.1.8",
    "object.fromentries": "^2.0.8",
    "object.groupby": "^1.0.3",
    "object.values": "^1.2.0",
    "once": "^1.4.0",
    "optionator": "^0.9.4",
    "p-limit": "^3.1.0",
    "p-locate": "^5.0.0",
    "parent-module": "^1.0.1",
    "path": "^0.12.7",
    "path-exists": "^4.0.0",
    "path-is-absolute": "^1.0.1",
    "path-key": "^3.1.1",
    "path-parse": "^1.0.7",
    "possible-typed-array-names": "^1.0.0",
    "postcss-selector-parser": "^6.1.2",
    "prelude-ls": "^1.2.1",
    "prop-types": "^15.8.1",
    "punycode": "^2.3.1",
    "queue-microtask": "^1.2.3",
    "react-is": "^16.13.1",
    "readline-sync": "^1.4.10",
    "reflect.getprototypeof": "^1.0.6",
    "regexp.prototype.flags": "^1.5.2",
    "resolve": "^1.22.8",
    "resolve-from": "^4.0.0",
    "reusify": "^1.0.4",
    "rimraf": "^3.0.2",
    "run-parallel": "^1.2.0",
    "safe-array-concat": "^1.1.2",
    "safe-regex-test": "^1.0.3",
    "semver": "^7.6.3",
    "set-function-length": "^1.2.2",
    "set-function-name": "^2.0.2",
    "shebang-command": "^2.0.0",
    "shebang-regex": "^3.0.0",
    "side-channel": "^1.0.6",
    "stop-iteration-iterator": "^1.0.0",
    "string.prototype.includes": "^2.0.0",
    "string.prototype.matchall": "^4.0.11",
    "string.prototype.repeat": "^1.0.0",
    "string.prototype.trim": "^1.2.9",
    "string.prototype.trimend": "^1.0.8",
    "string.prototype.trimstart": "^1.0.8",
    "strip-ansi": "^6.0.1",
    "strip-bom": "^3.0.0",
    "strip-json-comments": "^3.1.1",
    "supports-color": "^7.2.0",
    "supports-preserve-symlinks-flag": "^1.0.0",
    "text-table": "^0.2.0",
    "tsconfig-paths": "^3.15.0",
    "type-check": "^0.4.0",
    "type-fest": "^0.20.2",
    "typed-array-buffer": "^1.0.2",
    "typed-array-byte-length": "^1.0.1",
    "typed-array-byte-offset": "^1.0.2",
    "typed-array-length": "^1.0.6",
    "unbox-primitive": "^1.0.2",
    "uri-js": "^4.4.1",
    "util-deprecate": "^1.0.2",
    "vue-eslint-parser": "^9.4.3",
    "which": "^2.0.2",
    "which-boxed-primitive": "^1.0.2",
    "which-builtin-type": "^1.1.4",
    "which-collection": "^1.0.2",
    "which-typed-array": "^1.1.15",
    "word-wrap": "^1.2.5",
    "wrappy": "^1.0.2",
    "xml-name-validator": "^4.0.0",
    "yocto-queue": "^0.1.0"
  }
}
